//2.XML
//Extensible Markup Language简称XML
//
//1.概述
//    1.XML是什么
//        1.可扩展标记语言（EXtensible Markup Language），类似 HTML
//        2.设计的初衷是为了传输数据（现在多用json），如今XML更多的用于配置文件
//        3.没有预定义标签，需要自行定义（根据一定的规则），采用树结构
//    3.XML是不作为的，只是用来结构化、存储、传输数据（载体）
//2.语法
//    1.xml声明
//        <?xml version="1.0" encoding="utf-8"?>
//        <?开始    ?>结束
//        必须从文档的0行0列开始
//        文档声明有3个属性
//            version必须有，一般是1.0，因为高版本可能会产生兼容问题
//            encoding可以没有（默认是utf-8）
//3.元素
//    1.普通元素  标签，元素体，结束标签组成
//        元素体可以是元素或者文本<a><b>元素体</b></a>
//        标签
//            规则
//                没有保留字
//                可以包含字母、数字以及其他的字符，不能包含空格
//                不能以数字或者标点符号开始
//                不能以字母 xml（或者 XML、Xml 等等）开始
//            约定
//                避免. :   -   éòá等
//                具有描述性，但要简短，单词用_隔开
//    2.空元素
//        <a/>没有元素体，自己闭合
//4.属性
//    属性是元素的一部分，只能出现在开始标签中
//    一个元素可以有0-N个属性
//    =""
//    <a version="1.0">属性</a>
//5.转义字符
//    部分字符会被解析成xml文档结构，实际上，只有字符 "<" 和 "&" 确实是非法的，但有些字符习惯上也被转义替换
//    其后跟;区分转义字符
//        <       &lt
//        >       &gt
//        "      &quot
//        '      &apos
//        &       &amp
//6.预定义区  CDATA区
//    避免大量的转义字符难以阅读
//    CDATA区不会被解析
//    <! [ CDATA[] ] >
//        但要注意，CDATA区不可以出现]>，因为这是CDATA区的结束符号
package part2;

public class XML {
}
